from django.db import models
from modulo_usuario_rol.models import estudiante
from modulo_instancia.models import semestre
from django.contrib.auth.models import User
from django.core.validators import RegexValidator


class tipo_discapacidad (models.Model):
    nombre = models.CharField(max_length=100, default=None,null=True)
    
class info_extra_disc (models.Model):
    id_estudiante = models.ForeignKey(estudiante, on_delete=models.CASCADE, default=0, related_name='id_estudiante_in_info_extra_disc')
    id_tipo_discapacidad = models.ForeignKey(tipo_discapacidad, on_delete=models.CASCADE, default=0, related_name='id_tipo_discapacidad_in_info_extra_disc')
    categoria = models.CharField(max_length=100, default=None)
    
class datos_entrevistado (models.Model):
    desarrollaActividad = models.BooleanField(default=False, null=True)
    desarrollaActividadData = models.CharField(max_length=100, default=None, null=True)
    orientacionSexual = models.CharField(max_length=50, default=None, null=True)
    orientacionSexualOtro = models.CharField(max_length=100, default=None, null=True)
    autoreconocimientoEtnico = models.CharField(max_length=100, default=None, null=True)
    autoreconocimientoEtnicoOtro = models.CharField(max_length=100, default=None, null=True)
    estadoCivil = models.CharField(max_length=50, default=None, null=True)
    actividadesOcio = models.BooleanField(default=False, null=True)
    actividadesOcioData = models.CharField(max_length=100, default=None, null=True)
    actividadDeportiva = models.BooleanField(default=False, null=True)
    actividadDeportivaData = models.CharField(max_length=100, default=None, null=True)
    programaAcompanamiento = models.BooleanField(default=False, null=True)
    programaAcompanamientoOtro = models.CharField(max_length=100, default=None, null=True)
    programaAcompanamientoOtroData = models.CharField(max_length=100, default=None, null=True)
    
class asignacion_discapacidad (models.Model):
    id_usuario = models.ForeignKey(User, on_delete=models.CASCADE, default=0, related_name='id_usuario_in_asignacion_discapacidad')
    id_estudiante = models.ForeignKey(estudiante, on_delete=models.CASCADE, default=0, related_name='id_estudiante_in_asignacion_discapacidad')
    id_semestre = models.ForeignKey(semestre, on_delete=models.CASCADE, default=0, related_name='id_semestre_in_asignacion_discapacidad')
    estado = models.BooleanField(default=True)
    
class user_extended_disc (models.Model):
    id_usuario = models.ForeignKey(User, on_delete=models.CASCADE, default=0, related_name='id_usuario_in_user_extended_disc')
    celular=models.CharField(max_length=20, default=None, validators=[RegexValidator(regex=r'^[()\-0-9\s]+$', message='Por favor ingresa un tel√©fono o celular valido')])
    profesion =models.CharField(max_length=100, default=None)

class datos_economicos (models.Model):
    estrato_socio = models.IntegerField(default=None,null=True)
    recibe_prestacion_econo = models.BooleanField(default=False)
    recibe_beca = models.BooleanField(default=False)
    recibe_transporte = models.BooleanField(default=False)
    recibe_finan_materiales = models.BooleanField(default=False)
    solvencia_economica = models.BooleanField(default=False)
    expectativas_laborales = models.CharField(max_length=500, default=None,null=True)
    nivel_educativo_padre = models.CharField(max_length=50, default=None,null=True)
    ocupacion_padre = models.CharField(max_length=200, default=None,null=True)
    situacion_padre = models.CharField(max_length=50, default=None,null=True)
    nivel_educativo_madre = models.CharField(max_length=50, default=None,null=True)
    ocupacion_madre = models.CharField(max_length=200, default=None,null=True)
    situacion_madre = models.CharField(max_length=50, default=None,null=True)
    permanencia_ingresos_propios = models.BooleanField(default=False)
    permanencia_ingresos_familiares = models.BooleanField(default=False)
    permanencia_ingresos_otros = models.BooleanField(default=False)
    permanencia_ingresos_otros_texto = models.CharField(max_length=100, default=None,null=True)
    requiere_materiales = models.BooleanField(default=False)
    valor_materiales = models.IntegerField(default=None,null=True)
    transporte_privado = models.BooleanField(default=False)
    transporte_publico = models.BooleanField(default=False)
    transporte_propio = models.BooleanField(default=False)
    transporte_otro = models.BooleanField(default=False)
    transporte_otro_data = models.CharField(max_length=100, default=None,null=True)
    valor_transporte = models.IntegerField(default=None,null=True)
    valor_sostenimiento = models.IntegerField(default=None,null=True)
    actualmente_vive_estado = models.CharField(max_length=50, default=None,null=True)
    actualmente_vive_parentezco = models.CharField(max_length=100, default=None,null=True)
    tiene_hijos = models.BooleanField(default=False)
    hijos_numero = models.IntegerField(default=None,null=True)
    motivo_ingreso = models.CharField(max_length=500, default=None,null=True)
    expectativas_carrera = models.CharField(max_length=500, default=None,null=True)
    expectativas_grado = models.CharField(max_length=500, default=None,null=True)
    labor_padre = models.CharField(max_length=100, default=None,null=True)
    labor_madre = models.CharField(max_length=100, default=None,null=True)
    otro_familiar_nivel_educativo = models.CharField(max_length=100, default=None,null=True)
    otro_familiar_situacion_economica = models.CharField(max_length=100, default=None,null=True)
    otro_familiar_actividad_economica = models.CharField(max_length=100, default=None,null=True)
    otro_familiar_labor_desempena = models.CharField(max_length=100, default=None,null=True)
    
    
class datos_academicos (models.Model):
    numero_resolucion = models.BigIntegerField(default=None,null=True)
    creditos_programa = models.IntegerField(default=None,null=True)
    titulo_obtenido = models.CharField(max_length=100, default=None,null=True)
    institucion = models.CharField(max_length=100, default=None,null=True)
    nivel_formacion = models.CharField(max_length=20, default=None,null=True)
    apoyos_recibidos = models.CharField(max_length=100, default=None,null=True)
    observaciones = models.CharField(max_length=500, default=None,null=True)
    dificultades = models.CharField(max_length=500, default=None,null=True)
    otros_programas_academicos = models.JSONField(default=None,null=True)
    edu_media_nombre_institucion = models.CharField(max_length=100, default=None,null=True)
    edu_media_titulo_obtenido = models.CharField(max_length=100, default=None,null=True)
    edu_media_tipo_institucion = models.CharField(max_length=100, default=None,null=True)
    edu_media_dificultad_apoyo = models.JSONField(default=None,null=True)
    edu_superior_tipo_institucion = models.CharField(max_length=100, default=None,null=True)
    edu_superior_dificultad_apoyo = models.JSONField(default=None,null=True)
    periodo_ingreso = models.DateField(auto_now_add=True,null=True)
    observaciones_adicionales = models.CharField(max_length=500, default=None,null=True)
    
    
class percepcion_discapacidad (models.Model):
    considera_discapacidad = models.BooleanField(default=False)
    consideracion = models.CharField(max_length=500, default=None,null=True)
    adquisicion = models.CharField(max_length=500, default=None,null=True)
    cuenta_con_diagnostico = models.BooleanField(default=False)
    tipo_diagnostico = models.CharField(max_length=500, default=None,null=True)
    certificado_invalidez = models.BooleanField(default=False)
    documento_soporte = models.BooleanField(default=False)
    
    vision = models.BooleanField(default=False)
    vision_texto = models.CharField(max_length=50, default=None,null=True)
    audicion = models.BooleanField(default=False)
    audicion_texto = models.CharField(max_length=50, default=None,null=True)
    voz_y_habla = models.BooleanField(default=False)
    voz_y_habla_texto = models.CharField(max_length=50, default=None,null=True)
    movimiento_cuerpo = models.BooleanField(default=False)
    movimiento_cuerpo_texto = models.CharField(max_length=50, default=None,null=True)
    cognicion = models.BooleanField(default=False)
    cognicion_texto = models.CharField(max_length=50, default=None,null=True)
    estado_socio_emocional = models.BooleanField(default=False)
    estado_socio_emocional_texto = models.CharField(max_length=50, default=None,null=True)
    relaciones_sexuales = models.BooleanField(default=False)
    relaciones_sexuales_texto = models.CharField(max_length=50, default=None,null=True)
    deglucion = models.BooleanField(default=False)
    deglucion_texto = models.CharField(max_length=50, default=None,null=True)
    otra = models.BooleanField(default=False)
    otra_texto = models.CharField(max_length=50, default=None,null=True)
    
    ojos = models.BooleanField(default=False)
    ojos_texto = models.CharField(max_length=50, default=None,null=True)
    oidos = models.BooleanField(default=False)
    oidos_texto = models.CharField(max_length=50, default=None,null=True)
    vocales = models.BooleanField(default=False)
    vocales_texto = models.CharField(max_length=50, default=None,null=True)
    manos = models.BooleanField(default=False)
    manos_texto = models.CharField(max_length=50, default=None,null=True)
    piernas = models.BooleanField(default=False)
    piernas_texto = models.CharField(max_length=50, default=None,null=True)
    piel = models.BooleanField(default=False)
    piel_texto = models.CharField(max_length=50, default=None,null=True)
    cerebro = models.BooleanField(default=False)
    cerebro_texto = models.CharField(max_length=50, default=None,null=True)
    sistema_nervioso = models.BooleanField(default=False)
    sistema_nervioso_texto = models.CharField(max_length=50, default=None,null=True)
    sistema_cardio = models.BooleanField(default=False)
    sistema_cardio_texto = models.CharField(max_length=50, default=None,null=True)
    sistema_genital = models.BooleanField(default=False)
    sistema_genital_texto = models.CharField(max_length=50, default=None,null=True)
    sistema_digestivo = models.BooleanField(default=False)
    sistema_digestivo_texto = models.CharField(max_length=50, default=None,null=True)
    otra = models.BooleanField(default=False)
    otra_texto = models.CharField(max_length=50, default=None,null=True)
    
    cursos = models.BooleanField(default=False)
    cursos_texto = models.CharField(max_length=50, default=None,null=True)
    clases_magistrales = models.BooleanField(default=False)
    clases_magistrales_texto = models.CharField(max_length=50, default=None,null=True)
    laboratorios = models.BooleanField(default=False)
    laboratorios_texto = models.CharField(max_length=50, default=None,null=True)
    secuencias_numericas = models.BooleanField(default=False)
    secuencias_numericas_texto = models.CharField(max_length=50, default=None,null=True)
    talleres = models.BooleanField(default=False)
    talleres_texto = models.CharField(max_length=50, default=None,null=True)
    conferencias = models.BooleanField(default=False)
    conferencias_texto = models.CharField(max_length=50, default=None,null=True)
    practica_deportiva = models.BooleanField(default=False)
    practica_deportiva_texto = models.CharField(max_length=50, default=None,null=True)
    ocio = models.BooleanField(default=False)
    ocio_texto = models.CharField(max_length=50, default=None,null=True)
    movilizacion = models.BooleanField(default=False)
    movilizacion_texto = models.CharField(max_length=50, default=None,null=True)
    conciertos = models.BooleanField(default=False)
    conciertos_texto = models.CharField(max_length=50, default=None,null=True)
    servicios_salud = models.BooleanField(default=False)
    servicios_salud_texto = models.CharField(max_length=50, default=None,null=True)
    asambleas = models.BooleanField(default=False)
    asambleas_texto = models.CharField(max_length=50, default=None,null=True)
    alimentos_cafeteria = models.BooleanField(default=False)
    alimentos_cafeteria_texto = models.CharField(max_length=50, default=None,null=True)
    tramites = models.BooleanField(default=False)
    tramites_texto = models.CharField(max_length=50, default=None,null=True)
    otra = models.BooleanField(default=False)
    otra_texto = models.CharField(max_length=50, default=None,null=True)

    condicion_discapacidad = models.BooleanField(default=False)
    contexto_universitario = models.BooleanField(default=False)
    ausencia_ayuda_tec = models.BooleanField(default=False)
    ausencia_espacios_fisicos = models.BooleanField(default=False)
    ausencia_materiales_impresos = models.BooleanField(default=False)
    ausencia_personas_apoyo = models.BooleanField(default=False)
    actitudes_negativas_personas = models.BooleanField(default=False)
    ausencia_servicios_discapacidad = models.BooleanField(default=False)
    otros_factores = models.BooleanField(default=False)
    otros_factores_texto = models.CharField(max_length=250, default=None,null=True)
    condicion_psicoemocional = models.BooleanField(default=False)
    otra_psicoemocional = models.BooleanField(default=False)
    otra_psicoemocional_texto = models.CharField(max_length=250, default=None,null=True)

    escritos_impresos = models.BooleanField(default=False)
    escritos_impresos_numero = models.IntegerField(default=None,null=True)
    imagenes_pantalla = models.BooleanField(default=False)
    imagenes_pantalla_numero = models.IntegerField(default=None,null=True)
    copia_dictado = models.BooleanField(default=False)
    copia_dictado_numero = models.IntegerField(default=None,null=True)
    transcripcion_textos = models.BooleanField(default=False)
    transcripcion_textos_numero = models.IntegerField(default=None,null=True)
    manuales_escritos = models.BooleanField(default=False)
    manuales_escritos_numero = models.IntegerField(default=None,null=True)
    textos_pantalla = models.BooleanField(default=False)
    textos_pantalla_numero = models.IntegerField(default=None,null=True)
    redactar = models.BooleanField(default=False)
    redactar_numero = models.IntegerField(default=None,null=True)
    elaborar_ideas = models.BooleanField(default=False)
    elaborar_ideas_numero = models.IntegerField(default=None,null=True)
    escuchar = models.BooleanField(default=False)
    escuchar_numero = models.IntegerField(default=None,null=True)
    expre_oral = models.BooleanField(default=False)
    expre_oral_numero = models.IntegerField(default=None,null=True)
    compren_oral = models.BooleanField(default=False)
    compren_oral_numero = models.IntegerField(default=None,null=True)
    interactuar = models.BooleanField(default=False)
    interactuar_numero = models.IntegerField(default=None,null=True)
    rel_interpersonales = models.BooleanField(default=False)
    rel_interpersonales_numero = models.IntegerField(default=None,null=True)
    desplazarse = models.BooleanField(default=False)
    desplazarse_numero = models.IntegerField(default=None,null=True)
    manipular_obj = models.BooleanField(default=False)
    manipular_obj_numero = models.IntegerField(default=None,null=True)
    mant_sentado = models.BooleanField(default=False)
    mant_sentado_numero = models.IntegerField(default=None,null=True)
    asearse = models.BooleanField(default=False)
    asearse_numero = models.IntegerField(default=None,null=True)
    vestirse_desves = models.BooleanField(default=False)
    vestirse_desves_numero = models.IntegerField(default=None,null=True)
    consumier_alimen = models.BooleanField(default=False)
    consumier_alimen_numero = models.IntegerField(default=None,null=True)
    evacuar = models.BooleanField(default=False)
    evacuar_numero = models.IntegerField(default=None,null=True)
    otro = models.BooleanField(default=False)
    otro_texto = models.CharField(max_length=100, default=None,null=True)

    amigo_apoyo = models.BooleanField(default=False)
    pareja_apoyo = models.BooleanField(default=False)
    familia_apoyo = models.BooleanField(default=False)
    salud_apoyo = models.BooleanField(default=False)
    otro_apoyo = models.BooleanField(default=False)
    privado_desplazar = models.BooleanField(default=False)
    publico_desplazar = models.BooleanField(default=False)
    propio_desplazar = models.BooleanField(default=False)
    otro_desplazar = models.BooleanField(default=False)
    participa_org = models.BooleanField(default=False)
    act_otras_per = models.BooleanField(default=False)
    apoyo_inst = models.BooleanField(default=False)
    nombre_institucion = models.CharField(max_length=200, default=None,null=True)
    tipo_apoyo = models.CharField(max_length=200, default=None,null=True)
    
class acceso_servi_salud (models.Model):
    regimen_vinculado = models.BooleanField(default=False)
    servicio_salud = models.CharField(max_length=50, default=None,null=True)
    salud_otra_texto = models.CharField(max_length=50, default=None,null=True)
    servicio_general = models.BooleanField(default=False)
    servicio_optometra = models.BooleanField(default=False)
    servicio_psiquiatria = models.BooleanField(default=False)
    servicio_alternativas = models.BooleanField(default=False)
    servicio_especializado = models.BooleanField(default=False)
    servicio_fisioterapia = models.BooleanField(default=False)
    servicio_otro = models.BooleanField(default=False)
    servicio_ocupacional = models.BooleanField(default=False)
    servicio_fonoaudiologia = models.BooleanField(default=False)
    servicio_psicologia = models.BooleanField(default=False)
    servicio_social = models.BooleanField(default=False)
    salud_prepagada = models.BooleanField(default=False)
    salud_pre_nombre_institucion = models.CharField(max_length=50, default=None,null=True)
    servicio_complementario = models.BooleanField(default=False)
    servicio_complementario_nombre = models.CharField(max_length=50, default=None,null=True)
    servicio_estudiantil = models.BooleanField(default=False)
    servicio_estudiantil_nombre = models.CharField(max_length=50, default=None,null=True)

class caracterizacion (models.Model):
    id_datos_economicos = models.ForeignKey(datos_economicos, on_delete=models.CASCADE, default=0, related_name='id_datos_economicos_in_caracterizacion')
    id_datos_academicos = models.ForeignKey(datos_academicos, on_delete=models.CASCADE, default=0, related_name='id_datos_academicos_in_caracterizacion')
    id_percepcion_discapacidad = models.ForeignKey(percepcion_discapacidad, on_delete=models.CASCADE, default=0, related_name='id_percepcion_discapacidad_in_caracterizacion')
    id_acceso_servi_salud = models.ForeignKey(acceso_servi_salud, on_delete=models.CASCADE, default=0, related_name='id_acceso_servi_salud_in_caracterizacion')
    id_semestre = models.ForeignKey(semestre, on_delete=models.CASCADE, default=0, related_name='id_semestre_in_caracterizacion')
    id_estudiante = models.ForeignKey(estudiante, on_delete=models.CASCADE, default=0, related_name='id_estudiante_in_caracterizacion')
    fecha= models.DateField(auto_now_add=False,default=None,null=True)
    lugar = models.CharField(max_length=500,default=None,null=True)
    id_creador = models.ForeignKey(User,on_delete=models.CASCADE,null=True,related_name='id_user_in_caracterizacion')
    id_datos_entrevistado = models.ForeignKey(datos_entrevistado, on_delete=models.CASCADE, default=None, null=True, related_name='id_datos_entrevistado_in_caracterizacion')
    
    
class produccion_ac (models.Model):
    hablar = models.BooleanField(default=False)
    hablar_opc = models.CharField(max_length=15, default=None,null=True)
    msm_no_verb = models.BooleanField(default=False)
    msm_no_verb_opc = models.CharField(max_length=15, default=None,null=True)
    msm_lng_sig = models.BooleanField(default=False)
    msm_lng_sig_opc = models.CharField(max_length=15, default=None,null=True)
    msm_escritos = models.BooleanField(default=False)
    msm_escritos_opc = models.CharField(max_length=15, default=None,null=True)
    otras_prod = models.BooleanField(default=False)
    otras_prod_opc = models.CharField(max_length=15, default=None,null=True)

class recepcion_ac (models.Model):
    recp_msm_hablados = models.BooleanField(default=False)
    recp_msm_hablados_opc = models.CharField(max_length=15, default=None,null=True)
    recp_msm_no_verb = models.BooleanField(default=False)
    recp_msm_no_verb_opc = models.CharField(max_length=15, default=None,null=True)
    recp_msm_lng_sig = models.BooleanField(default=False)
    recp_msm_lng_sig_opc = models.CharField(max_length=15, default=None,null=True)
    ayudas_tecnicas = models.BooleanField(default=False)
    ayudas_tecnicas_opc = models.CharField(max_length=15, default=None,null=True)
    apoyo_natural = models.BooleanField(default=False)
    apoyo_natural_opc = models.CharField(max_length=15, default=None,null=True)

class comunicacion_interpersonal_ac (models.Model):
    discusion = models.BooleanField(default=False)
    discusion_opc = models.CharField(max_length=15, default=None,null=True)
    utilizar_disp = models.BooleanField(default=False)
    utilizar_disp_opc = models.CharField(max_length=15, default=None,null=True)
    leng_sig_conv = models.BooleanField(default=False)
    leng_sig_conv_opc = models.CharField(max_length=15, default=None,null=True)
    conv_utilizar_disp = models.BooleanField(default=False)
    conv_utilizar_disp_opc = models.CharField(max_length=15, default=None,null=True)
    comunicacion_esp = models.BooleanField(default=False)
    comunicacion_esp_opc = models.CharField(max_length=15, default=None,null=True)
    comunicacion_no_esp = models.BooleanField(default=False)
    comunicacion_no_esp_opc = models.CharField(max_length=15, default=None,null=True)

class apoyo_productos_ar (models.Model):
    mediaciones_discursivas = models.BooleanField(default=False)
    mediaciones_discursivas_int = models.CharField(max_length=15, default=None,null=True)
    dise√±o_estrategias = models.BooleanField(default=False)
    dise√±o_estrategias_int = models.CharField(max_length=15, default=None,null=True)
    impl_estrategias = models.BooleanField(default=False)
    impl_estrategias_int = models.CharField(max_length=15, default=None,null=True)
    espacio_inquietudes = models.BooleanField(default=False)
    espacio_inquietudes_int = models.CharField(max_length=15, default=None,null=True)
    orientacion_herra = models.BooleanField(default=False)
    orientacion_herra_int = models.CharField(max_length=15, default=None,null=True)
    acce_plataformas = models.BooleanField(default=False)
    acce_plataformas_int = models.CharField(max_length=15, default=None,null=True)
    niveles_acce = models.BooleanField(default=False)
    niveles_acce_int = models.CharField(max_length=15, default=None,null=True)
    recursos_acce = models.BooleanField(default=False)
    recursos_acce_int = models.CharField(max_length=15, default=None,null=True)
    uso_dispositivos = models.BooleanField(default=False)
    uso_dispositivos_int = models.CharField(max_length=15, default=None,null=True)
    apuntes_clase = models.BooleanField(default=False)
    apuntes_clase_int = models.CharField(max_length=15, default=None,null=True)

class apoyo_recursos_ar (models.Model):
    nvda = models.BooleanField(default=False)
    nvda_int = models.CharField(max_length=15, default=None,null=True)
    jaws = models.BooleanField(default=False)
    jaws_int = models.CharField(max_length=15, default=None,null=True)
    orca = models.BooleanField(default=False)
    orca_int = models.CharField(max_length=15, default=None,null=True)
    atspi = models.BooleanField(default=False)
    atspi_int = models.CharField(max_length=15, default=None,null=True)
    balabolka = models.BooleanField(default=False)
    balabolka_int = models.CharField(max_length=15, default=None,null=True)
    texto_audio = models.BooleanField(default=False)
    tecto_audio_int = models.CharField(max_length=15, default=None,null=True)
    soft_adap = models.BooleanField(default=False)
    soft_adap_int = models.CharField(max_length=15, default=None,null=True)
    otros_textos_voz = models.BooleanField(default=False)
    otros_textos_voz_int = models.CharField(max_length=15, default=None,null=True)
    dicatado_voz = models.BooleanField(default=False)
    dictado_voz_int = models.CharField(max_length=15, default=None,null=True)
    apoyo_tec = models.BooleanField(default=False)
    apoyo_tec_int = models.CharField(max_length=15, default=None,null=True)
    
class servicios_sistemas_ar (models.Model):
    adec_textos = models.BooleanField(default=False)
    adec_textos_int = models.CharField(max_length=15, default=None,null=True)
    materiales_estudio = models.BooleanField(default=False)
    materiales_estudio_int = models.CharField(max_length=15, default=None,null=True)
    act_material = models.BooleanField(default=False)
    act_material_int = models.CharField(max_length=15, default=None,null=True)
    
class ajustes_razonables_ac (models.Model):
    id_apoyo_productos = models.ForeignKey(apoyo_productos_ar, on_delete=models.CASCADE, default=0, related_name='id_apoyo_productos_in_caracterizacion')
    id_apoyo_recursos = models.ForeignKey(apoyo_recursos_ar, on_delete=models.CASCADE, default=0, related_name='id_apoyo_recursos_in_caracterizacion')
    id_servicios_sistemas = models.ForeignKey(servicios_sistemas_ar, on_delete=models.CASCADE, default=0, related_name='id_servicios_sistemas_in_caracterizacion')
    
class accesibilidad_comunicacional (models.Model):
    id_produccion = models.ForeignKey(produccion_ac, on_delete=models.CASCADE, default=0, related_name='id_produccion_in_accesibilidad_comunicacional')
    id_recepcion = models.ForeignKey(recepcion_ac, on_delete=models.CASCADE, default=0, related_name='id_recepcion_in_accesibilidad_comunicacional')
    id_comunicacion_interpersonal = models.ForeignKey(comunicacion_interpersonal_ac, on_delete=models.CASCADE, default=0, related_name='id_comunicacion_interpersonal_in_accesibilidad_comunicacional')
    id_ajustes_razonables = models.ForeignKey(ajustes_razonables_ac, on_delete=models.CASCADE, default=0, related_name='id_ajustes_razonables_in_accesibilidad_comunicacional')
    
class tareas_generales_ai (models.Model):
    banarse = models.BooleanField(default=False)
    banarse_opc = models.CharField(max_length=15, default=None,null=True)
    cuidado_intestino = models.BooleanField(default=False)
    cuidado_intestino_opc = models.CharField(max_length=15, default=None,null=True)
    vestirse = models.BooleanField(default=False)
    vestirse_opc = models.CharField(max_length=15, default=None,null=True)
    comer = models.BooleanField(default=False)
    comer_opc = models.CharField(max_length=15, default=None,null=True)
    alimentacion = models.BooleanField(default=False)
    alimentacion_opc = models.CharField(max_length=15, default=None,null=True)
    movilidad = models.BooleanField(default=False)
    movilidad_opc = models.CharField(max_length=15, default=None,null=True)
    cuidado_dis = models.BooleanField(default=False)
    cuidado_dis_opc = models.CharField(max_length=15, default=None,null=True)
    higiene_per = models.BooleanField(default=False)
    higienes_per_opc = models.CharField(max_length=15, default=None,null=True)
    act_sexual = models.BooleanField(default=False)
    act_sexual_opc = models.CharField(max_length=15, default=None,null=True)
    inodoro = models.BooleanField(default=False)
    inodoro_opc = models.CharField(max_length=15, default=None,null=True)

class actividades_instrumentales_ai (models.Model):
    cuidado_otros = models.BooleanField(default=False)
    cuidado_otros_opc = models.CharField(max_length=15, default=None,null=True)
    cuidado_mascotas = models.BooleanField(default=False)
    cuidado_mascotas_opc = models.CharField(max_length=15, default=None,null=True)
    crianza_ninos = models.BooleanField(default=False)
    crianza_ninos_opc = models.CharField(max_length=15, default=None,null=True)
    gestion_comunicacion = models.BooleanField(default=False)
    gestion_comunicacion_opc = models.CharField(max_length=15, default=None,null=True)
    mov_comunidad = models.BooleanField(default=False)
    mov_comunidad_opc = models.CharField(max_length=15, default=None,null=True)
    finanzas = models.BooleanField(default=False)
    finanzas_opc = models.CharField(max_length=15, default=None,null=True)
    mant_salud = models.BooleanField(default=False)
    mant_salud_opc = models.CharField(max_length=15, default=None,null=True)
    manejo_hogar = models.BooleanField(default=False)
    manejo_hogar_opc = models.CharField(max_length=15, default=None,null=True)
    comida_limpieza = models.BooleanField(default=False)
    comida_limpieza_opc = models.CharField(max_length=15, default=None,null=True)
    religion = models.BooleanField(default=False)
    religion_opc = models.CharField(max_length=15, default=None,null=True)
    emergencia = models.BooleanField(default=False)
    emergencia_opc = models.CharField(max_length=15, default=None,null=True)
    compras = models.BooleanField(default=False)
    compras_opc = models.CharField(max_length=15, default=None,null=True)

class actividades_basicas_ai (models.Model):
    descanso = models.BooleanField(default=False)
    medicamentos = models.BooleanField(default=False)
    cuales_medicamentos = models.CharField(max_length=15, default=None,null=True)
    horas_descanso = models.IntegerField(default=None,null=True)
    influye_act = models.BooleanField(default=False)
    
class ajustes_razonables_ai (models.Model):
    iluminacion = models.BooleanField(default=False)
    iluminacion_int = models.CharField(max_length=15, default=None,null=True)
    desc_auditiva = models.BooleanField(default=False)
    desc_auditiva_int = models.CharField(max_length=15, default=None,null=True)
    cate_utencilios = models.BooleanField(default=False)
    cate_utencilios_int = models.CharField(max_length=15, default=None,null=True)
    socializacion = models.BooleanField(default=False)
    socializacion_int = models.CharField(max_length=15, default=None,null=True)
    uso_recursos = models.BooleanField(default=False)
    uso_recursos_int = models.CharField(max_length=15, default=None,null=True)
    
class accesibilidad_instrumental (models.Model):
    id_tareas_generales = models.ForeignKey(tareas_generales_ai, on_delete=models.CASCADE, default=0, related_name='id_tareas_generales_in_accesibilidad_instrumental')
    id_actividades_instrumentales = models.ForeignKey(actividades_instrumentales_ai, on_delete=models.CASCADE, default=0, related_name='id_actividades_instrumentales_in_accesibilidad_instrumental')
    id_actividades_basicas = models.ForeignKey(actividades_basicas_ai, on_delete=models.CASCADE, default=0, related_name='id_actividades_basicas_in_accesibilidad_instrumental')
    id_ajustes_razonables = models.ForeignKey(ajustes_razonables_ai, on_delete=models.CASCADE, default=0, related_name='id_ajustes_razonables_in_accesibilidad_instrumental')

class ajustes_razonables_am (models.Model):
    img_descp = models.BooleanField(default=False)
    img_descp_int = models.CharField(max_length=15, default=None,null=True)
    prod_audio = models.BooleanField(default=False)
    prod_audio_int = models.CharField(max_length=15, default=None,null=True)
    material_audio = models.BooleanField(default=False)
    material_audio_int = models.CharField(max_length=15, default=None,null=True)
    diseno_docs = models.BooleanField(default=False)
    diseno_docs_int = models.CharField(max_length=15, default=None,null=True)
    diseno_presen = models.BooleanField(default=False)
    diseno_presen_int = models.CharField(max_length=15, default=None,null=True)
    titulos = models.BooleanField(default=False)
    titulos_int = models.CharField(max_length=15, default=None,null=True)
    secciones = models.BooleanField(default=False)
    secciones_int = models.CharField(max_length=15, default=None,null=True)
    simular = models.BooleanField(default=False)
    simular_int = models.CharField(max_length=15, default=None,null=True)
    listar = models.BooleanField(default=False)
    listar_int = models.CharField(max_length=15, default=None,null=True)
    idioma = models.BooleanField(default=False)
    idioma_int = models.CharField(max_length=15, default=None,null=True)
    pauta = models.BooleanField(default=False)
    pauta_int = models.CharField(max_length=15, default=None,null=True)
    flexi_entregas = models.BooleanField(default=False)
    flexi_entregas_int = models.CharField(max_length=15, default=None,null=True)
    garantizar_cond = models.BooleanField(default=False)
    garantizar_cond_int = models.CharField(max_length=15, default=None,null=True)
    formatos_acce = models.BooleanField(default=False)
    formatos_acce_int = models.CharField(max_length=15, default=None,null=True)
    material_estudio = models.BooleanField(default=False)
    material_estudio_int = models.CharField(max_length=15, default=None,null=True)
    tematicas_iden = models.BooleanField(default=False)
    tematicas_iden_int = models.CharField(max_length=15, default=None,null=True)
    resumen_clase = models.BooleanField(default=False)
    resumen_clase_int = models.CharField(max_length=15, default=None,null=True)
    videos_sub = models.BooleanField(default=False)
    videos_sub_int = models.CharField(max_length=15, default=None,null=True)
    presentar_materiales = models.BooleanField(default=False)
    presentar_materiales_int = models.CharField(max_length=15, default=None,null=True)
    subir_contenido = models.BooleanField(default=False)
    subir_contenido_int = models.CharField(max_length=15, default=None,null=True)
 
class accesibilidad_metodologica (models.Model):
    practica_peda = models.CharField(max_length=100, default=None,null=True)
    corriente_peda = models.CharField(max_length=20, default=None,null=True)
    objetivos = models.CharField(max_length=50, default=None,null=True)
    contenidos = models.CharField(max_length=100, default=None,null=True)
    tipo_meto = models.CharField(max_length=50, default=None,null=True)
    estrategias = models.CharField(max_length=100, default=None,null=True)
    tipos_evaluacion = models.CharField(max_length=50, default=None,null=True)
    proc_evaluacion = models.CharField(max_length=50, default=None,null=True)
    tiempos_evaluacion = models.CharField(max_length=50, default=None,null=True)
    practica_peda_txt = models.CharField(max_length=100, default=None,null=True)
    tiempo_asincronico = models.CharField(max_length=100, default=None,null=True)
    tipo_asignatura = models.CharField(max_length=100, default=None,null=True)
    creditos = models.CharField(max_length=100, default=None,null=True)
    id_ajustes_razonables = models.ForeignKey(ajustes_razonables_am, on_delete=models.CASCADE, default=0, related_name='id_ajustes_razonables_in_accesibilidad_metodologica')

class accesibilidad_programatica (models.Model):
    org_beneficas = models.BooleanField(default=False)
    org_beneficas_txt = models.CharField(max_length=100, default=None,null=True)
    part_clubes = models.BooleanField(default=False)
    part_clubes_txt = models.CharField(max_length=100, default=None,null=True)
    Org_sociales = models.BooleanField(default=False)
    Org_sociales_txt = models.CharField(max_length=100, default=None,null=True)
    act_recreativas = models.BooleanField(default=False)
    act_recreativas_txt = models.CharField(max_length=100, default=None,null=True)
    deportes = models.BooleanField(default=False)
    deportes_txt = models.CharField(max_length=100, default=None,null=True)
    act_entrenimiento = models.BooleanField(default=False)
    act_entrenimiento_txt = models.CharField(max_length=100, default=None,null=True)
    instrumento = models.BooleanField(default=False)
    instrumento_txt = models.CharField(max_length=100, default=None,null=True)
    viaja_sola = models.BooleanField(default=False)
    viaja_sola_txt = models.CharField(max_length=100, default=None,null=True)
    practicas_reli = models.BooleanField(default=False)
    practicas_reli_txt = models.CharField(max_length=100, default=None,null=True)
    derechos_humanos = models.BooleanField(default=False)
    derechos_humanos_txt = models.CharField(max_length=100, default=None,null=True)
    agremiaciones = models.BooleanField(default=False)
    agremiaciones_int = models.CharField(max_length=15, default=None,null=True)
    espacios_parti = models.BooleanField(default=False)
    espacios_parti_int = models.CharField(max_length=15, default=None,null=True)
    espacios_depor = models.BooleanField(default=False)
    espacios_depor_int = models.CharField(max_length=15, default=None,null=True)
    redes_inter = models.BooleanField(default=False)
    redes_inter_int = models.CharField(max_length=15, default=None,null=True)
    
class accesibilidad_fisica_aft (models.Model):
    aulas_clase = models.BooleanField(default=False)
    aulas_clase_opc = models.CharField(max_length=15, default=None,null=True)
    aulas_clase_txt = models.CharField(max_length=100, default=None,null=True)
    edificios = models.BooleanField(default=False)
    edificios_opc = models.CharField(max_length=15, default=None,null=True)
    edificios_txt = models.CharField(max_length=100, default=None,null=True)
    laboratorios = models.BooleanField(default=False)
    laboratorios_opc = models.CharField(max_length=15, default=None,null=True)
    laboratorios_txt = models.CharField(max_length=100, default=None,null=True)
    fac_zonas = models.BooleanField(default=False)
    fac_zonas_opc = models.CharField(max_length=15, default=None,null=True)
    fac_zonas_txt = models.CharField(max_length=100, default=None,null=True)
    cafeteria = models.BooleanField(default=False)
    cafeteria_opc = models.CharField(max_length=15, default=None,null=True)
    cafeteria_txt = models.CharField(max_length=100, default=None,null=True)
    parqueadero = models.BooleanField(default=False)
    parqueadero_opc = models.CharField(max_length=15, default=None,null=True)
    parqueadero_txt = models.CharField(max_length=100, default=None,null=True)
    cdu = models.BooleanField(default=False)
    cdu_opc = models.CharField(max_length=15, default=None,null=True)
    cdu_txt = models.CharField(max_length=100, default=None,null=True)
    auditorios = models.BooleanField(default=False)
    auditorios_opc = models.CharField(max_length=15, default=None,null=True)
    auditorios_txt = models.CharField(max_length=100, default=None,null=True)
    plazoletas = models.BooleanField(default=False)
    plazoletas_opc = models.CharField(max_length=15, default=None,null=True)
    plazoletas_txt = models.CharField(max_length=100, default=None,null=True)

class accesibilidad_tecnologica_aft (models.Model):
    acceso_basico = models.BooleanField(default=False)
    acceso_basico_opc = models.CharField(max_length=15, default=None,null=True)
    acceso_basico_txt = models.CharField(max_length=100, default=None,null=True)
    acceso_inter = models.BooleanField(default=False)
    acceso_inter_opc = models.CharField(max_length=15, default=None,null=True)
    acceso_inter_txt = models.CharField(max_length=100, default=None,null=True)
    acceso_avanzado = models.BooleanField(default=False)
    acceso_avanzado_opc = models.CharField(max_length=15, default=None,null=True)
    acceso_avanzado_txt = models.CharField(max_length=100, default=None,null=True)
    acce_sistemas = models.BooleanField(default=False)
    acce_soft = models.CharField(max_length=15, default=None,null=True)
    acce_avan = models.CharField(max_length=15, default=None,null=True)
    
class entorno_socio_ar (models.Model):
    zonas_comunes = models.BooleanField(default=False)
    zonas_comunes_int = models.CharField(max_length=15, default=None,null=True)
    biblioteca = models.BooleanField(default=False)
    biblioteca_int = models.CharField(max_length=15, default=None,null=True)
    cafeteria = models.BooleanField(default=False)
    cafeteria_int = models.CharField(max_length=15, default=None,null=True)
    edificios = models.BooleanField(default=False)
    edificios_int = models.CharField(max_length=15, default=None,null=True)
    aulas = models.BooleanField(default=False)
    aulas_int = models.CharField(max_length=15, default=None,null=True)
    recreativos = models.BooleanField(default=False)
    recreativos_int = models.CharField(max_length=15, default=None,null=True)
    laboratorios = models.BooleanField(default=False)
    laboratorios_int = models.CharField(max_length=15, default=None,null=True)
    espacios_rsc = models.BooleanField(default=False)
    espacios_rsc_int = models.CharField(max_length=15, default=None,null=True)
    equip_urbanos = models.BooleanField(default=False)
    equip_urbanos_int = models.CharField(max_length=15, default=None,null=True)
    se√±alizacion = models.BooleanField(default=False)
    se√±alizacion_int = models.CharField(max_length=15, default=None,null=True)
    se√±aletica = models.BooleanField(default=False)
    se√±aletica_int = models.CharField(max_length=15, default=None,null=True)
    manejo_herra = models.BooleanField(default=False)
    manejo_herra_int = models.CharField(max_length=15, default=None,null=True)
    
class actividades_cuidado_ar (models.Model):
    cuidado_mismo = models.BooleanField(default=False)
    cuidado_mismo_int = models.CharField(max_length=15, default=None,null=True)
    lavarse_mismo = models.BooleanField(default=False)
    lavarse_mismo_int = models.CharField(max_length=15, default=None,null=True)
    cuidado_cuerpo = models.BooleanField(default=False)
    cuidado_cuerpo_int = models.CharField(max_length=15, default=None,null=True)
    vestirse = models.BooleanField(default=False)
    vestirse_int = models.CharField(max_length=15, default=None,null=True)
    comer = models.BooleanField(default=False)
    comer_int = models.CharField(max_length=15, default=None,null=True)
    cuidado_salud = models.BooleanField(default=False)
    cuidado_salud_int = models.CharField(max_length=15, default=None,null=True)
    
class entorno_fisicotec_ar (models.Model):
    inst_sanitarias = models.BooleanField(default=False)
    inst_sanitarias_int = models.CharField(max_length=15, default=None,null=True)
    
class ajustes_razonables_aft (models.Model):
    id_entorno_socio = models.ForeignKey(entorno_socio_ar, on_delete=models.CASCADE, default=0, related_name='id_entorno_socio_in_ajustes_razonables_aft')
    id_actividades_cuidado = models.ForeignKey(actividades_cuidado_ar, on_delete=models.CASCADE, default=0, related_name='id_actividades_cuidado_in_ajustes_razonables_aft')
    id_entorno_fisicotec = models.ForeignKey(entorno_fisicotec_ar, on_delete=models.CASCADE, default=0, related_name='id_entorno_fisicotec_in_ajustes_razonables_aft')
    
class accesibilidad_fisica_tec (models.Model):
    id_accesibilidad_fisica = models.ForeignKey(accesibilidad_fisica_aft, on_delete=models.CASCADE, default=0, related_name='id_accesibilidad_fisica_in_accesibilidad_fisica_tec')
    id_accesibilidad_tecnologica = models.ForeignKey(accesibilidad_tecnologica_aft, on_delete=models.CASCADE, default=0, related_name='id_accesibilidad_tecnologica_in_accesibilidad_fisica_tec')
    id_ajustes_razonables = models.ForeignKey(ajustes_razonables_aft, on_delete=models.CASCADE, default=0, related_name='id_ajustes_razonables_in_accesibilidad_fisica_tec')
    
class accesibilidad (models.Model):
    id_accesibilidad_comunicacional = models.ForeignKey(accesibilidad_comunicacional, on_delete=models.CASCADE, default=0, related_name='id_accesibilidad_comunicacional_in_accesibilidad')
    id_accesibilidad_instrumental = models.ForeignKey(accesibilidad_instrumental, on_delete=models.CASCADE, default=0, related_name='id_accesibilidad_instrumental_in_accesibilidad')
    id_accesibilidad_metodologica = models.ForeignKey(accesibilidad_metodologica, on_delete=models.CASCADE, default=0, related_name='id_accesibilidad_metodologica_in_accesibilidad')
    id_accesibilidad_programatica = models.ForeignKey(accesibilidad_programatica, on_delete=models.CASCADE, default=0, related_name='id_accesibilidad_programatica_in_accesibilidad')
    id_accesibilidad_fisica_tec = models.ForeignKey(accesibilidad_fisica_tec, on_delete=models.CASCADE, default=0, related_name='id_accesibilidad_fisica_tec_in_accesibilidad')
    id_semestre = models.ForeignKey(semestre, on_delete=models.CASCADE, default=0, related_name='id_semestre_in_accesibilidad')
    id_estudiante = models.ForeignKey(estudiante, on_delete=models.CASCADE, default=0, related_name='id_estudiante_in_accesibilidad')
    
class seguimiento (models.Model):
    id_estudiante = models.ForeignKey(estudiante, on_delete=models.CASCADE, default=0, related_name='id_estudiante_in_seguimiento')
    fecha_creacion = models.DateTimeField(auto_now_add=False,null=True)
    id_creador = models.ForeignKey(User, on_delete=models.CASCADE, default=0, related_name='id_creador_in_seguimiento')
    id_editor = models.ForeignKey(User, on_delete=models.CASCADE, default=0, related_name='id_editor_in_seguimiento')